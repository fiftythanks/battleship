(()=>{"use strict";var e={56:(e,t,r)=>{e.exports=function(e){var t=r.nc;t&&e.setAttribute("nonce",t)}},72:e=>{var t=[];function r(e){for(var r=-1,n=0;n<t.length;n++)if(t[n].identifier===e){r=n;break}return r}function n(e,n){for(var s={},i=[],a=0;a<e.length;a++){var l=e[a],c=n.base?l[0]+n.base:l[0],u=s[c]||0,d="".concat(c," ").concat(u);s[c]=u+1;var h=r(d),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==h)t[h].references++,t[h].updater(p);else{var A=o(p,n);n.byIndex=a,t.splice(a,0,{identifier:d,updater:A,references:1})}i.push(d)}return i}function o(e,t){var r=t.domAPI(t);return r.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;r.update(e=t)}else r.remove()}}e.exports=function(e,o){var s=n(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<s.length;i++){var a=r(s[i]);t[a].references--}for(var l=n(e,o),c=0;c<s.length;c++){var u=r(s[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}s=l}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},208:(e,t,r)=>{r.d(t,{A:()=>a});var n=r(354),o=r.n(n),s=r(314),i=r.n(s)()(o());i.push([e.id,"/*\n  Josh's Custom CSS Reset\n  https://www.joshwcomeau.com/css/custom-css-reset/\n*/\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  html {\n    interpolate-size: allow-keywords;\n  }\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\np {\n  text-wrap: pretty;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  text-wrap: balance;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n/* My styles */\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  /* For drag and drop. When a ship is dragged, a div is created, and it must be put somewhere. So it's put outside the visible area. */\n  overflow: hidden;\n}\nbutton:hover {\n  cursor: pointer;\n}\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  & button {\n    align-self: center;\n    padding: 0.2rem 3rem;\n  }\n}\n.players-form {\n  display: flex;\n  gap: 3rem;\n}\n.player-form {\n  display: flex;\n  flex-direction: column;\n  & h2 {\n    align-self: center;\n  }\n}\n.boards {\n  display: flex;\n  gap: 10rem;\n  & > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}\n.player-one,\n.player-two {\n  position: relative;\n}\n.player-one .board {\n  display: flex;\n  flex-direction: column;\n}\n.player-two .board {\n  display: none;\n  flex-direction: column;\n}\n.player-one .board-enemy {\n  display: none;\n  flex-direction: column;\n}\n.player-two .board-enemy {\n  display: flex;\n  flex-direction: column;\n}\n.board-enemy .square:hover {\n  cursor: pointer;\n}\n.row,\n.cols {\n  height: 3rem;\n  flex-shrink: 0;\n  display: flex;\n}\n.square {\n  width: 3rem;\n  height: 3rem;\n  flex-shrink: 0;\n  outline: 1px solid black;\n}\n.num,\n.letter,\n.empty {\n  width: 3rem;\n  flex-shrink: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n}\n.turn-wrapper {\n  font-size: 1.5rem;\n}\n.square.occupied,\n.square.available {\n  background-color: black;\n}\n.square.hit {\n  background-color: red;\n}\n.square.missed {\n  background-color: blue;\n}\n.square.sunk {\n  background: grey;\n}\n.board,\n.board-enemy {\n  position: relative;\n}\n#hand-over-one[open],\n#hand-over-two[open],\n#hand-over-one-enemy[open],\n#hand-over-two-enemy[open],\n#ready-one[open],\n#ready-two[open] {\n  width: calc(100% - 3rem);\n  height: calc(100% - 3rem);\n  top: 3rem;\n  left: 3rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;EAGE,sBAAsB;AACxB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE;IACE,gCAAgC;EAClC;AACF;;AAEA;EACE,gBAAgB;EAChB,mCAAmC;AACrC;;AAEA;;;;;EAKE,cAAc;EACd,eAAe;AACjB;;AAEA;;;;EAIE,aAAa;AACf;;AAEA;;;;;;;EAOE,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;AACnB;AACA;;;;;;EAME,kBAAkB;AACpB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA,cAAc;AACd;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;EACT,qIAAqI;EACrI,gBAAgB;AAClB;AACA;EACE,eAAe;AACjB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX;IACE,kBAAkB;IAClB,oBAAoB;EACtB;AACF;AACA;EACE,aAAa;EACb,SAAS;AACX;AACA;EACE,aAAa;EACb,sBAAsB;EACtB;IACE,kBAAkB;EACpB;AACF;AACA;EACE,aAAa;EACb,UAAU;EACV;IACE,aAAa;IACb,sBAAsB;IACtB,mBAAmB;EACrB;AACF;AACA;;EAEE,kBAAkB;AACpB;AACA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,eAAe;AACjB;AACA;;EAEE,YAAY;EACZ,cAAc;EACd,aAAa;AACf;AACA;EACE,WAAW;EACX,YAAY;EACZ,cAAc;EACd,wBAAwB;AAC1B;AACA;;;EAGE,WAAW;EACX,cAAc;EACd,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,iBAAiB;AACnB;AACA;EACE,iBAAiB;AACnB;AACA;;EAEE,uBAAuB;AACzB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,gBAAgB;AAClB;AACA;;EAEE,kBAAkB;AACpB;AACA;;;;;;EAME,wBAAwB;EACxB,yBAAyB;EACzB,SAAS;EACT,UAAU;EACV,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB",sourcesContent:["/*\n  Josh's Custom CSS Reset\n  https://www.joshwcomeau.com/css/custom-css-reset/\n*/\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  html {\n    interpolate-size: allow-keywords;\n  }\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\np {\n  text-wrap: pretty;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  text-wrap: balance;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n/* My styles */\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  /* For drag and drop. When a ship is dragged, a div is created, and it must be put somewhere. So it's put outside the visible area. */\n  overflow: hidden;\n}\nbutton:hover {\n  cursor: pointer;\n}\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  & button {\n    align-self: center;\n    padding: 0.2rem 3rem;\n  }\n}\n.players-form {\n  display: flex;\n  gap: 3rem;\n}\n.player-form {\n  display: flex;\n  flex-direction: column;\n  & h2 {\n    align-self: center;\n  }\n}\n.boards {\n  display: flex;\n  gap: 10rem;\n  & > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}\n.player-one,\n.player-two {\n  position: relative;\n}\n.player-one .board {\n  display: flex;\n  flex-direction: column;\n}\n.player-two .board {\n  display: none;\n  flex-direction: column;\n}\n.player-one .board-enemy {\n  display: none;\n  flex-direction: column;\n}\n.player-two .board-enemy {\n  display: flex;\n  flex-direction: column;\n}\n.board-enemy .square:hover {\n  cursor: pointer;\n}\n.row,\n.cols {\n  height: 3rem;\n  flex-shrink: 0;\n  display: flex;\n}\n.square {\n  width: 3rem;\n  height: 3rem;\n  flex-shrink: 0;\n  outline: 1px solid black;\n}\n.num,\n.letter,\n.empty {\n  width: 3rem;\n  flex-shrink: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n}\n.turn-wrapper {\n  font-size: 1.5rem;\n}\n.square.occupied,\n.square.available {\n  background-color: black;\n}\n.square.hit {\n  background-color: red;\n}\n.square.missed {\n  background-color: blue;\n}\n.square.sunk {\n  background: grey;\n}\n.board,\n.board-enemy {\n  position: relative;\n}\n#hand-over-one[open],\n#hand-over-two[open],\n#hand-over-one-enemy[open],\n#hand-over-two-enemy[open],\n#ready-one[open],\n#ready-two[open] {\n  width: calc(100% - 3rem);\n  height: calc(100% - 3rem);\n  top: 3rem;\n  left: 3rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n"],sourceRoot:""}]);const a=i},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r="",n=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),n&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=e(t),n&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(e,r,n,o,s){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(n)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);n&&i[u[0]]||(void 0!==s&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=s),r&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=r):u[2]=r),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},354:e=>{e.exports=function(e){var t=e[1],r=e[3];if(!r)return t;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),s="/*# ".concat(o," */");return[t].concat([s]).join("\n")}return[t].join("\n")}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},659:e=>{var t={};e.exports=function(e,r){var n=function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(r){!function(e,t,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,o&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var s=r.sourceMap;s&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(n,e,t.options)}(t,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={id:n,exports:{}};return e[n](s,s.exports,r),s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.nc=void 0;var n=r(72),o=r.n(n),s=r(825),i=r.n(s),a=r(659),l=r.n(a),c=r(56),u=r.n(c),d=r(540),h=r.n(d),p=r(113),A=r.n(p),f=r(208),y={};y.styleTagTransform=A(),y.setAttributes=u(),y.insert=l().bind(null,"head"),y.domAPI=i(),y.insertStyleElement=h(),o()(f.A,y),f.A&&f.A.locals&&f.A.locals;class m{constructor(e){if("number"!=typeof e||!Number.isInteger(e)||e<1||e>5)throw new TypeError("Incorrect length! Length must be an integer number from 1 to 5. Any other value will result in an error.");this.length=e,this.hits=0}hit(){this.hits+=1}get isSunk(){return this.hits>=this.length}get wasHit(){return this.hits>0}get type(){let e;switch(this.length){case 1:e="patrolBoat";break;case 2:e="submarine";break;case 3:e="destroyer";break;case 4:e="battleship";break;case 5:e="carrier"}return e}}const w=["A","B","C","D","E","F","G","H","I","J"];function g(e,t){return e.filter((e=>e[0]===t[0]&&e[1]===t[1])).length>0}class b{constructor(){this.rows={};for(let e=0;e<10;e+=1){const t=[];for(let e=0;e<10;e+=1)t.push({occupiedBy:null});this.rows[`${w[e]}`]=t}this.misses=[],this.hits=[],this.carrier={instance:null,coords:[[null,null],[null,null],[null,null],[null,null],[null,null]]},this.battleship={instance:null,coords:[[null,null],[null,null],[null,null],[null,null]]},this.destroyer={instance:null,coords:[[null,null],[null,null],[null,null]]},this.submarine={instance:null,coords:[[null,null],[null,null]]},this.patrolBoat={instance:null,coords:[[null,null]]}}placeShip=(e,t)=>{if(!Array.isArray(e)||2!==e.length)throw new TypeError("Incorrect coordinates! Input must be in the form (coord1, coord2), where coord1 is an array of two elements, the first of which is a capital English letter from A to J, and the second is a number from 1 to 10. coord2 is either an array abiding by the same rules or undefine.");const[r,n]=e;let o,s,i;if(Array.isArray(t)&&2===t.length)[o,s]=t;else{if(void 0!==t)throw new TypeError("Incorrect coordinates! Input must be in the form (coord1, coord2), where coord1 is an array of two elements, the first of which is a capital English letter from A to J, and the second is a number from 1 to 10. coord2 is either an array abiding by the same rules or undefine.");o=void 0,s=void 0}if(!w.includes(r)||"number"!=typeof n||!Number.isInteger(n)||n<1||n>10||(void 0!==o||void 0!==s)&&(!w.includes(o)||"number"!=typeof s||!Number.isInteger(s)||s<1||s>10||r!==o&&n!==s))throw new Error("Incorrect coordinates. Input must be in the form ([row1, col1], [row2, col2]), where row1, row2 are letters from A to J and col1, col2 are integers from 1 to 10. Ships must be places in one row or in one column, therefore if col1 isn't equal to col2, then row1 = row2, and if row1 isn't equal to row2, then col1 = col2.");if(void 0===o&&void 0===s){const e=this.rows[`${r}`],t=n;if(null!==e[t-1].occupiedBy)return null;const o="patrolBoat";if(null!==this[`${o}`].instance)throw new Error(`A ship of type ${o} is already present on the board.`);i=new m(1),e[t-1].occupiedBy=i,this[`${o}`].instance=i,this[`${o}`].coords[0][0]=r,this[`${o}`].coords[0][1]=t}else if(r===o){const e=this.rows[`${r}`];for(let t=n;t<=s;t+=1)if(null!==e[t-1].occupiedBy)return null;const t=s-n+1;let o;switch(t){case 5:o="carrier";break;case 4:o="battleship";break;case 3:o="destroyer";break;case 2:o="submarine";break;case 1:o="patrolBoat"}if(null!==this[`${o}`].instance)throw new Error(`A ship of type ${o} is already present on the board.`);i=new m(t),this[`${o}`].instance=i;for(let t=n,a=0;t<=s;t+=1)e[t-1].occupiedBy=i,this[`${o}`].coords[a][0]=r,this[`${o}`].coords[a][1]=t,a+=1}else{const e=n;for(let t=w.indexOf(r);t<=w.indexOf(o);t+=1)if(null!==this.rows[`${w[t]}`][e-1].occupiedBy)return null;const t=w.indexOf(o)-w.indexOf(r)+1;let s;switch(t){case 5:s="carrier";break;case 4:s="battleship";break;case 3:s="destroyer";break;case 2:s="submarine";break;case 1:s="patrolBoat"}if(null!==this[`${s}`].instance)throw new Error(`A ship of type ${s} is already present on the board.`);i=new m(t),this[`${s}`].instance=i;for(let t=w.indexOf(r),n=0;t<=w.indexOf(o);t+=1)this.rows[`${w[t]}`][e-1].occupiedBy=i,this[`${s}`].coords[n][0]=w[t],this[`${s}`].coords[n][1]=e,n+=1}return i};isOccupied=(e,t)=>{if(!w.includes(e)||"number"!=typeof t||!Number.isInteger(t)||t<1||t>10)throw new Error("Incorrect arguments. The arguments must be in the form (row, col), where row is a letter from A to J and col is a number from 1 to 10.");return this.rows[`${e}`][t-1].occupiedBy};receiveAttack=(e,t)=>{if(!w.includes(e)||"number"!=typeof t||!Number.isInteger(t)||t<1||t>10)throw new Error("Incorrect arguments. The arguments must be in the form (row, col), where row is a letter from A to J and col is a number from 1 to 10.");if(this.hits.filter((r=>r[0]===e&&r[1]===t)).length>0||this.misses.filter((r=>r[0]===e&&r[1]===t)).length>0)throw new Error(`Square (${e}, ${t}) has already been attacked.`);const r=this.isOccupied(e,t);return null!==r?(r.hit(),this.hits.push([e,t])):this.misses.push([e,t]),r};get areAllSunk(){return!(null!==this.carrier.instance&&!this.carrier.instance.isSunk||null!==this.battleship.instance&&!this.battleship.instance.isSunk||null!==this.destroyer.instance&&!this.destroyer.instance.isSunk||null!==this.submarine.instance&&!this.submarine.instance.isSunk||null!==this.patrolBoat.instance&&!this.patrolBoat.instance.isSunk)}get isFleetFull(){return null!==this.carrier.instance&&null!==this.battleship.instance&&null!==this.destroyer.instance&&null!==this.submarine.instance&&null!==this.patrolBoat.instance}wasAttacked=(e,t)=>!!(this.isOccupied(e,t)&&this.hits.filter((r=>r[0]===e&&r[1]===t)).length>0)||!this.isOccupied(e,t)&&this.misses.filter((r=>r[0]===e&&r[1]===t)).length>0;get isPatrolBoatSunk(){return this.patrolBoat.instance.isSunk}get wasPatrolBoatHit(){return this.patrolBoat.instance.wasHit}get isSubmarineSunk(){return this.submarine.instance.isSunk}get wasSubmarineHit(){return this.submarine.instance.wasHit}get isDestroyerSunk(){return this.destroyer.instance.isSunk}get wasDestroyerHit(){return this.destroyer.instance.wasHit}get isBattleshipSunk(){return this.battleship.instance.isSunk}get wasBattleshipHit(){return this.battleship.instance.wasHit}get isCarrierSunk(){return this.carrier.instance.isSunk}get wasCarrierHit(){return this.carrier.instance.wasHit}get patrolBoatCoords(){return this.patrolBoat.coords}get submarineCoords(){return this.submarine.coords}get destroyerCoords(){return this.destroyer.coords}get battleshipCoords(){return this.battleship.coords}get carrierCoords(){return this.carrier.coords}changeShipPosition=(e,t)=>{if(!Array.isArray(e)||2!==e.length)throw new TypeError("Incorrect coordinates! Input must be in the form (coord1, coord2), where coord1 is an array of two elements, the first of which is a capital English letter from A to J, and the second a number from 1 to 10. coord2 is either an array abiding by the same rules or undefined.");const[r,n]=e;let o,s,i;if(Array.isArray(t)&&2===t.length)[o,s]=t;else{if(void 0!==t)throw new TypeError("Incorrect coordinates! Input must be in the form (coord1, coord2), where coord1 is an array of two elements, the first of which is a capital English letter from A to J, and the second is a number from 1 to 10. coord2 is either an array abiding by the same rules or undefine.");o=void 0,s=void 0}if(!w.includes(r)||"number"!=typeof n||!Number.isInteger(n)||n<1||n>10||(void 0!==o||void 0!==s)&&(!w.includes(o)||"number"!=typeof s||!Number.isInteger(s)||s<1||s>10||r!==o&&n!==s))throw new Error("Incorrect coordinates. Input must be in the form ([row1, col1], [row2, col2]), where row1, row2 are letters from A to J and col1, col2 are integers from 1 to 10. Ships must be places in one row or in one column, therefore if col1 isn't equal to col2, then row1 = row2, and if row1 isn't equal to row2, then col1 = col2.");if(void 0===o&&void 0===s){const e=this.rows[`${r}`],t=n,o="patrolBoat";for(let e=r-1;e<=r+1;e+=1)for(let i=t-1;i<=t+1;i+=1){if((void 0===this.rows[w[e]]||void 0===this.rows[w[e]][i-1])&&i!==n-1&&i!==s+1&&e!==w.indexOf(r)-1&&e!==w.indexOf(r)+1)throw new Error("Incorrect positioning!");if(void 0!==this.rows[w[e]]&&void 0!==this.rows[w[e]][i-1]&&null!==this.rows[w[e]][i-1].occupiedBy&&this.rows[w[e]][i-1].occupiedBy.type!==o)throw new Error("Occupied!")}i=this[o].instance;const a=this[o].coords[0];this.rows[a[0]][a[1]-1].occupiedBy=null,e[t-1].occupiedBy=i,this[o].coords[0][0]=r,this[o].coords[0][1]=t}else if(r===o){const e=this.rows[`${r}`];let t;switch(s-n+1){case 5:t="carrier";break;case 4:t="battleship";break;case 3:t="destroyer";break;case 2:t="submarine";break;case 1:t="patrolBoat"}for(let e=n-1;e<=s+1;e+=1)for(let o=w.indexOf(r)-1;o<=w.indexOf(r)+1;o+=1){if((void 0===this.rows[w[o]]||void 0===this.rows[w[o]][e-1])&&e!==n-1&&e!==s+1&&o!==w.indexOf(r)-1&&o!==w.indexOf(r)+1)throw new Error("Incorrect positioning!");if(void 0!==this.rows[w[o]]&&void 0!==this.rows[w[o]][e-1]&&null!==this.rows[w[o]][e-1].occupiedBy&&this.rows[w[o]][e-1].occupiedBy.type!==t)throw new Error("Occupied!")}this[t].coords.forEach((e=>{const t=e[0],r=e[1]-1;this.rows[t][r].occupiedBy=null})),i=this[t].instance;for(let o=n,a=0;o<=s;o+=1)e[o-1].occupiedBy=i,this[t].coords[a][0]=r,this[t].coords[a][1]=o,a+=1}else{const e=n;let t;switch(w.indexOf(o)-w.indexOf(r)+1){case 5:t="carrier";break;case 4:t="battleship";break;case 3:t="destroyer";break;case 2:t="submarine";break;case 1:t="patrolBoat"}for(let n=w.indexOf(r)-1;n<=w.indexOf(o)+1;n+=1)for(let r=e-1;r<=e+1;r+=1)if(void 0!==this.rows[w[n]]&&void 0!==this.rows[w[n]][r-1]&&null!==this.rows[w[n]][r-1].occupiedBy&&this.rows[w[n]][r-1].occupiedBy.type!==t)throw new Error("Occupied!");this[t].coords.forEach((e=>{const t=e[0],r=e[1]-1;this.rows[t][r].occupiedBy=null})),i=this[t].instance;for(let n=w.indexOf(r),s=0;n<=w.indexOf(o);n+=1)this.rows[w[n]][e-1].occupiedBy=i,this[t].coords[s][0]=w[n],this[t].coords[s][1]=e,s+=1}return i};#e=()=>{const e=[];let t=0;Object.values(this.rows).forEach((r=>{for(let n=0;n<r.length;n+=1)e.push([w[t],n+1]);t+=1}));const r=e.filter((e=>g(this.carrierCoords,e)||g(this.battleshipCoords,e)||g(this.destroyerCoords,e)||g(this.submarineCoords,e)||g(this.patrolBoatCoords,e))),n=[];return r.forEach((([e,t])=>{n.push([e,t]);const r=w.indexOf(e),o=t;r-1>=0&&o-1>=1&&n.push([w[r-1],o-1]),r-1>=0&&n.push([w[r-1],o]),r-1>=0&&o+1<=10&&n.push([w[r-1],o+1]),o-1>=1&&n.push([w[r],o-1]),o+1<=10&&n.push([w[r],o+1]),r+1<10&&o-1>=1&&n.push([w[r+1],o-1]),r+1<10&&n.push([w[r+1],o]),r+1<10&&o+1<=10&&n.push([w[r+1],o+1])})),e.filter((e=>!g(n,e)))};openForPlacement=(e,t)=>{if(void 0!==t&&e[0]!==t[0]&&e[1]!==t[1])throw new Error("Incorrect input! Arguments must be either one pair of coordinates or the first and the last pair of coordinates.");let r,n;switch(r=void 0!==t?e[0]!==t[0]?w.indexOf(t[0])-w.indexOf(e[0])+1:t[1]-e[1]+1:1,r){case 1:n="patrolBoat";break;case 2:n="submarine";break;case 3:n="destroyer";break;case 4:n="battleship";break;case 5:n="carrier"}const o=[];this[`${n}Coords`].forEach((e=>{const t=w.indexOf(e[0]),r=e[1];for(let e=t-1;e<=t+1;e+=1)if(e>=0&&e<=9)e:for(let s=r-1;s<=r+1;s+=1)if(s>=1&&s<=10){for(let o=e-1;o<=e+1;o+=1)if(!(o<0||o>9))for(let e=s-1;e<=s+1;e+=1){if(e<1||e>10||o===t&&e===r)continue;const s=w[o],i=this.isOccupied(s,e);if(null!==i&&i!==this[n].instance)continue e}o.push([w[e],s])}}));const s=[];o.forEach((e=>{g(s,e)||s.push(e)}));const i=[...this.#e(),...s];if(void 0!==t){for(let r=w.indexOf(e[0]);r<=w.indexOf(t[0]);r+=1)for(let n=e[1];n<=t[1];n+=1)if(!g(i,[w[r],n]))return!1}else if(!g(i,[e[0],e[1]]))return!1;return!0};changeOrientation=(e,t)=>{const r=this.isOccupied(e,t);if(null!==r){const e=r.type,t=JSON.parse(JSON.stringify(this[`${e}Coords`]));if(1===t.length)return null;const n=[];if(t[0][0]===t[1][0]){const{length:e}=t,r=t[0][0],o=w.indexOf(r),s=t[0][1];for(let t=o;t<=o+e-1;t+=1)n.push([w[t],s]);this.changeShipPosition(n[0],n.at(-1))}else if(t[0][1]===t[1][1]){const{length:e}=t,r=t[0][0],o=t[0][1];for(let t=o;t<=o+e-1;t+=1)n.push([r,t]);this.changeShipPosition(n[0],n.at(-1))}return[t,n]}return null}}class C{constructor(e="Player"){this.gameboard=new b,this.name=e}get hasLost(){return this.gameboard.areAllSunk}placeShip=(e,t)=>this.gameboard.placeShip(e,t);isOccupied=(e,t)=>this.gameboard.isOccupied(e,t);receiveAttack=(e,t)=>this.gameboard.receiveAttack(e,t);get isFleetFull(){return this.gameboard.isFleetFull}wasAttacked=(e,t)=>this.gameboard.wasAttacked(e,t);get isPatrolBoatSunk(){return this.gameboard.isPatrolBoatSunk}get wasPatrolBoatHit(){return this.gameboard.wasPatrolBoatHit}get patrolBoatCoords(){return this.gameboard.patrolBoatCoords}get isSubmarineSunk(){return this.gameboard.isSubmarineSunk}get wasSubmarineHit(){return this.gameboard.wasSubmarineHit}get submarineCoords(){return this.gameboard.submarineCoords}get isDestroyerSunk(){return this.gameboard.isDestroyerSunk}get wasDestroyerHit(){return this.gameboard.wasDestroyerHit}get destroyerCoords(){return this.gameboard.destroyerCoords}get isBattleshipSunk(){return this.gameboard.isBattleshipSunk}get wasBattleshipHit(){return this.gameboard.wasBattleshipHit}get battleshipCoords(){return this.gameboard.battleshipCoords}get isCarrierSunk(){return this.gameboard.isCarrierSunk}get wasCarrierHit(){return this.gameboard.wasCarrierHit}get carrierCoords(){return this.gameboard.carrierCoords}changeShipPosition=(e,t)=>this.gameboard.changeShipPosition(e,t);openForPlacement=(e,t)=>this.gameboard.openForPlacement(e,t);changeOrientation=(e,t)=>this.gameboard.changeOrientation(e,t)}class E{constructor(e="Player1",t="Player2"){this.playerOne=new C(e),this.playerTwo=new C(t),this.whoseTurn=this.playerOne,this.winner=null,this.howManyTurns=0}P1PlaceShip=(e,t)=>this.playerOne.placeShip(e,t);P2PlaceShip=(e,t)=>this.playerTwo.placeShip(e,t);#t=(e,t)=>this.playerOne.receiveAttack(e,t);#r=(e,t)=>this.playerTwo.receiveAttack(e,t);makeTurn=(e,t)=>{if(this.isP1FleetFull&&this.isP2FleetFull){if(null===this.winner){let r;return this.whoseTurn===this.playerOne?(r=this.#r(e,t),this.howManyTurns+=1,this.playerTwo.hasLost?this.winner=this.playerOne:null===r&&(this.whoseTurn=this.playerTwo)):this.whoseTurn===this.playerTwo&&(r=this.#t(e,t),this.howManyTurns+=1,this.playerOne.hasLost?this.winner=this.playerTwo:null===r&&(this.whoseTurn=this.playerOne)),r}return null!==this.winner}throw new Error("Incomplete fleet!")};isP1SqOccupied=(e,t)=>this.playerOne.isOccupied(e,t);isP2SqOccupied=(e,t)=>this.playerTwo.isOccupied(e,t);get P1Name(){return this.playerOne.name}get P2Name(){return this.playerTwo.name}get isP1FleetFull(){return this.playerOne.isFleetFull}get isP2FleetFull(){return this.playerTwo.isFleetFull}P1WasAttacked=(e,t)=>this.playerOne.wasAttacked(e,t);P2WasAttacked=(e,t)=>this.playerTwo.wasAttacked(e,t);get isP1PatrolBoatSunk(){return this.playerOne.isPatrolBoatSunk}get wasP1PatrolBoatHit(){return this.playerOne.wasPatrolBoatHit}get P1PatrolBoatCoords(){return this.playerOne.patrolBoatCoords}get isP2PatrolBoatSunk(){return this.playerTwo.isPatrolBoatSunk}get wasP2PatrolBoatHit(){return this.playerTwo.wasPatrolBoatHit}get P2PatrolBoatCoords(){return this.playerTwo.patrolBoatCoords}get isP1SubmarineSunk(){return this.playerOne.isSubmarineSunk}get wasP1SubmarineHit(){return this.playerOne.wasSubmarineHit}get P1SubmarineCoords(){return this.playerOne.submarineCoords}get isP2SubmarineSunk(){return this.playerTwo.isSubmarineSunk}get wasP2SubmarineHit(){return this.playerTwo.wasSubmarineHit}get P2SubmarineCoords(){return this.playerTwo.submarineCoords}get isP1DestroyerSunk(){return this.playerOne.isDestroyerSunk}get wasP1DestroyerHit(){return this.playerOne.wasDestroyerHit}get P1DestroyerCoords(){return this.playerOne.destroyerCoords}get isP2DestroyerSunk(){return this.playerTwo.isDestroyerSunk}get wasP2DestroyerHit(){return this.playerTwo.wasDestroyerHit}get P2DestroyerCoords(){return this.playerTwo.destroyerCoords}get isP1BattleshipSunk(){return this.playerOne.isBattleshipSunk}get wasP1BattleshipHit(){return this.playerOne.wasBattleshipHit}get P1BattleshipCoords(){return this.playerOne.battleshipCoords}get isP2BattleshipSunk(){return this.playerTwo.isBattleshipSunk}get wasP2BattleshipHit(){return this.playerTwo.wasBattleshipHit}get P2BattleshipCoords(){return this.playerTwo.battleshipCoords}get isP1CarrierSunk(){return this.playerOne.isCarrierSunk}get wasP1CarrierHit(){return this.playerOne.wasCarrierHit}get P1CarrierCoords(){return this.playerOne.carrierCoords}get isP2CarrierSunk(){return this.playerTwo.isCarrierSunk}get wasP2CarrierHit(){return this.playerTwo.wasCarrierHit}get P2CarrierCoords(){return this.playerTwo.carrierCoords}P1ChangeShipPosition=(e,t)=>{if(0===this.howManyTurns)return this.playerOne.changeShipPosition(e,t);throw new Error("Game has already begun!")};P2ChangeShipPosition=(e,t)=>{if(0===this.howManyTurns)return this.playerTwo.changeShipPosition(e,t);throw new Error("Game has already begun!")};P1OpenForPlacement=(e,t)=>this.playerOne.openForPlacement(e,t);P2OpenForPlacement=(e,t)=>this.playerTwo.openForPlacement(e,t);P1ChangeOrientation=(e,t)=>this.playerOne.changeOrientation(e,t);P2ChangeOrientation=(e,t)=>this.playerTwo.changeOrientation(e,t)}const v=document.querySelector("form"),B=document.querySelector(".boards"),S=document.querySelector(".player-one h2"),k=document.querySelector(".player-two h2"),x=document.querySelector(".turn-wrapper"),P=document.querySelector(".turn"),O=document.querySelector("#hand-over-one"),q=(document.querySelector("#hand-over-one-enemy"),document.querySelector("#hand-over-two")),T=(document.querySelector("#hand-over-two-enemy"),document.querySelector(".player-one .board")),L=document.querySelector(".player-one .board-enemy"),I=document.querySelectorAll(".player-one .board .row"),H=document.querySelectorAll(".player-one .board-enemy .row"),F=document.querySelector(".player-two .board"),D=document.querySelector(".player-two .board-enemy"),$=document.querySelectorAll(".player-two .board .row"),z=document.querySelectorAll(".player-two .board-enemy .row"),J=["A","B","C","D","E","F","G","H","I","J"];let N=!1,j=!1;const M=document.querySelector("#ready-two"),U=document.querySelector("#ready-one");let W;M.addEventListener("close",(()=>{N=!0,D.style.display="none",q.show(),F.style.display="flex",U.show();for(let e=0;e<10;e+=1){const t=I[e].querySelectorAll(".square");for(let e=0;e<10;e+=1)t[e].removeAttribute("draggable")}})),U.addEventListener("close",(()=>{j=!0,F.style.display="none",O.show(),D.style.display="flex";for(let e=0;e<10;e+=1){const t=$[e].querySelectorAll(".square");for(let e=0;e<10;e+=1)t[e].removeAttribute("draggable")}})),v.addEventListener("submit",(e=>{e.preventDefault();const t=v.querySelector("#name-one").value,r=v.querySelector("#name-two").value;v.style.display="none",S.textContent=t,k.textContent=r,B.style=null,x.style=null,P.textContent=t,function(e,t){const r=new E(e,t);r.P1PlaceShip(["B",1],["F",1]),r.P1PlaceShip(["C",4],["C",7]),r.P1PlaceShip(["E",3],["E",5]),r.P1PlaceShip(["G",6],["H",6]),r.P1PlaceShip(["J",4]),r.P2PlaceShip(["B",1],["F",1]),r.P2PlaceShip(["C",4],["C",7]),r.P2PlaceShip(["E",3],["E",5]),r.P2PlaceShip(["G",6],["H",6]),r.P2PlaceShip(["J",4]);let n=null,o=null;function s(e,t,o){e.ondragstart=function(e){if(!N){const s=e.dataTransfer,{type:i,length:a}=r.isP1SqOccupied(t,o),l=r[`P1${i.replace(/^./,i.at(0).toUpperCase())}Coords`],c=1===l.length||l[0][0]===l[1][0]?"horizontal":"vertical",u=[a,c],d=document.createElement("div"),h="horizontal"===c?"height":"width";d.style.display="flex",d.style.flexDirection="horizontal"===c?"row":"column",d.style[h]="3rem",d.style.marginLeft="150vw";let p=0,A=0;const f=[],y=[];l.forEach((t=>{const r=J.indexOf(t[0]),n=t[1]-1,o=I[r].querySelectorAll(".square")[n];y.push(o),f.push([r,n]),o===e.target&&(A=p);const s=o.cloneNode(!0);d.appendChild(s),o.setAttribute("class","square"),p+=1})),n=[...u,A,y],u.push(A,f),s.setData("text/plain",JSON.stringify(u));const m=e.target.getBoundingClientRect();let w=e.clientX-m.left,g=e.clientY-m.top;const b=getComputedStyle(e.target).getPropertyValue("font-size").replace("px","");"horizontal"===c?w+=3*A*b:g+=3*A*b,document.body.appendChild(d),s.setDragImage(d,w,g)}}}function i(e,t,o){e.ondragstart=function(e){if(!j){const s=e.dataTransfer,{type:i,length:a}=r.isP2SqOccupied(t,o),l=r[`P2${i.replace(/^./,i.at(0).toUpperCase())}Coords`],c=1===l.length||l[0][0]===l[1][0]?"horizontal":"vertical",u=[a,c],d=document.createElement("div"),h="horizontal"===c?"height":"width";d.style.display="flex",d.style.flexDirection="horizontal"===c?"row":"column",d.style[h]="3rem",d.style.marginLeft="150vw";let p=0,A=0;const f=[],y=[];l.forEach((t=>{const r=J.indexOf(t[0]),n=t[1]-1,o=$[r].querySelectorAll(".square")[n];y.push(o),f.push([r,n]),o===e.target&&(A=p);const s=o.cloneNode(!0);d.appendChild(s),o.setAttribute("class","square"),p+=1})),n=[...u,A,y],u.push(A,f),s.setData("text/plain",JSON.stringify(u));const m=e.target.getBoundingClientRect();let w=e.clientX-m.left,g=e.clientY-m.top;const b=getComputedStyle(e.target).getPropertyValue("font-size").replace("px","");"horizontal"===c?w+=3*A*b:g+=3*A*b,document.body.appendChild(d),s.setDragImage(d,w,g)}}}for(let a=0;a<10;a+=1){const l=J[a],c=I[a].querySelectorAll(".square"),u=H[a].querySelectorAll(".square"),d=$[a].querySelectorAll(".square"),h=z[a].querySelectorAll(".square");for(let p=0;p<10;p+=1)c[p].addEventListener("dragover",(e=>{N||e.preventDefault()})),c[p].addEventListener("dragenter",(e=>{if(!N){if(e.preventDefault(),null===n)return;const[t,s,i]=n,u=[],d=[];if("horizontal"===s){for(let e=p-i;e<p-i+t;e+=1)if(e>9||e<0)return;for(let e=p-i;e<p-i+t;e+=1)u.push(c[e]),d.push([l,e+1])}else{for(let e=a-i;e<a-i+t;e+=1)if(e>9||e<0)return;for(let e=a-i;e<a-i+t;e+=1)u.push(I[e].querySelectorAll(".square")[p]),d.push([J[e],p+1])}o=[[...u],[...d]],r.P1OpenForPlacement(d[0],d.at(-1))&&u.forEach((e=>{e.classList.add("available")}))}})),c[p].addEventListener("dragleave",(e=>{if(e.preventDefault(),null===n)return;const[t,s,i]=n,l=[];if("horizontal"===s){for(let e=p-i;e<p-i+t;e+=1)if(e>9||e<0)return void(W=!0);for(let e=p-i;e<p-i+t;e+=1)l.push(c[e])}else{for(let e=a-i;e<a-i+t;e+=1)if(e>9||e<0)return void(W=!0);for(let e=a-i;e<a-i+t;e+=1)l.push(I[e].querySelectorAll(".square")[p])}const u=o[0],d=o[1];let h=!0;W=!0;for(const e of l)if(!u.includes(e)){h=!1,W=!1;break}if(h)l.forEach((e=>e.classList.remove("available")));else if(r.P1OpenForPlacement(d[0],d.at(-1)))l.forEach((e=>{u.includes(e)||e.classList.remove("available")}));else for(let e=0;e<l.length;e+=1)l[e].classList.remove("available"),l.includes(u[e])||u[e].classList.remove("available")})),c[p].addEventListener("drop",(e=>{if(!N){let t,n,o,i,u;e.preventDefault();try{[t,n,o,i]=JSON.parse(e.dataTransfer.getData("text/plain")),u=i.map((e=>I[e[0]].querySelectorAll(".square")[e[1]]))}catch{return}try{const e=[],i=[];if("horizontal"===n)for(let r=p-o;r<p-o+t;r+=1)e.push(c[r]),i.push([l,r+1]);else for(let r=a-o;r<a-o+t;r+=1)e.push(I[r].querySelectorAll(".square")[p]),i.push([J[r],p+1]);r.P1ChangeShipPosition(i[0],i.at(-1)),u.forEach((e=>{e.ondragstart=null,e.setAttribute("draggable","false")})),e.forEach(((e,t)=>{const r=i[t];e.classList.add("occupied"),e.setAttribute("draggable","true"),s(e,r[0],r[1])}))}catch{u.forEach((e=>e.classList.add("occupied")))}}})),c[p].addEventListener("dragend",(e=>{if(e.preventDefault(),null===n)return;const t=n[3];W&&t.forEach((e=>e.classList.add("occupied"))),n=null,o=null,W=!1})),r.isP1SqOccupied(l,p+1)&&(c[p].setAttribute("draggable","true"),s(c[p],l,p+1)),r.isP1SqOccupied(l,p+1)&&c[p].classList.add("occupied"),c[p].addEventListener("click",(()=>{if(!N&&c[p].classList.contains("occupied"))try{const e=r.P1ChangeOrientation(l,p+1),t=e[0],n=e[1],o=t.map((e=>{const t=J.indexOf(e[0]),r=e[1]-1;return I[t].querySelectorAll(".square")[r]})),i=n.map((e=>{const t=J.indexOf(e[0]),r=e[1]-1;return I[t].querySelectorAll(".square")[r]}));o.forEach((e=>{e.ondragstart=null,e.setAttribute("draggable","false"),e.classList.remove("occupied","available")})),i.forEach(((e,t)=>{const r=n[t];e.classList.add("occupied"),e.setAttribute("draggable","true"),s(e,r[0],r[1])}))}catch{}})),u[p].addEventListener("click",(()=>{if(r.whoseTurn===r.playerTwo&&null===r.winner)try{const n=r.makeTurn(l,p+1);null===n?(c[p].classList.add("missed"),u[p].classList.add("missed")):"object"==typeof n&&(c[p].classList.add("hit"),u[p].classList.add("hit"),n.isSunk)&&r[`P1${n.type.replace(/^./,n.type.at(0).toUpperCase())}Coords`].forEach((e=>{I[J.indexOf(e[0])].children[e[1]].classList.add("sunk"),H[J.indexOf(e[0])].children[e[1]].classList.add("sunk")})),null!==r.winner&&(x.textContent=`${t} wins!`),r.whoseTurn!==r.playerTwo&&(L.style.display="none",null===r.winner&&(O.show(),P.textContent=e,F.style.display="none",D.style.display="flex"),T.style.display="flex")}catch(e){}})),d[p].addEventListener("dragover",(e=>{j||e.preventDefault()})),d[p].addEventListener("dragenter",(e=>{if(!j){if(e.preventDefault(),null===n)return;const[t,s,i]=n,c=[],u=[];if("horizontal"===s){for(let e=p-i;e<p-i+t;e+=1)if(e>9||e<0)return;for(let e=p-i;e<p-i+t;e+=1)c.push(d[e]),u.push([l,e+1])}else{for(let e=a-i;e<a-i+t;e+=1)if(e>9||e<0)return;for(let e=a-i;e<a-i+t;e+=1)c.push($[e].querySelectorAll(".square")[p]),u.push([J[e],p+1])}o=[[...c],[...u]],r.P2OpenForPlacement(u[0],u.at(-1))&&c.forEach((e=>{e.classList.add("available")}))}})),d[p].addEventListener("dragleave",(e=>{if(e.preventDefault(),null===n)return;const[t,s,i]=n,l=[];if("horizontal"===s){for(let e=p-i;e<p-i+t;e+=1)if(e>9||e<0)return void(W=!0);for(let e=p-i;e<p-i+t;e+=1)l.push(d[e])}else{for(let e=a-i;e<a-i+t;e+=1)if(e>9||e<0)return void(W=!0);for(let e=a-i;e<a-i+t;e+=1)l.push($[e].querySelectorAll(".square")[p])}const c=o[0],u=o[1];let h=!0;W=!0;for(const e of l)if(!c.includes(e)){h=!1,W=!1;break}if(h)l.forEach((e=>e.classList.remove("available")));else if(r.P2OpenForPlacement(u[0],u.at(-1)))l.forEach((e=>{c.includes(e)||e.classList.remove("available")}));else for(let e=0;e<l.length;e+=1)l[e].classList.remove("available"),l.includes(c[e])||c[e].classList.remove("available")})),d[p].addEventListener("drop",(e=>{if(!j){let t,n,o,s,c;e.preventDefault();try{[t,n,o,s]=JSON.parse(e.dataTransfer.getData("text/plain")),c=s.map((e=>$[e[0]].querySelectorAll(".square")[e[1]]))}catch{return}try{const e=[],s=[];if("horizontal"===n)for(let r=p-o;r<p-o+t;r+=1)e.push(d[r]),s.push([l,r+1]);else for(let r=a-o;r<a-o+t;r+=1)e.push($[r].querySelectorAll(".square")[p]),s.push([J[r],p+1]);r.P2ChangeShipPosition(s[0],s.at(-1)),c.forEach((e=>{e.ondragstart=null,e.setAttribute("draggable","false")})),e.forEach(((e,t)=>{const r=s[t];e.classList.add("occupied"),i(e,r[0],r[1])}))}catch{c.forEach((e=>e.classList.add("occupied")))}}})),d[p].addEventListener("dragend",(e=>{if(e.preventDefault(),null===n)return;const t=n[3];W&&t.forEach((e=>e.classList.add("occupied"))),n=null,o=null,W=!1})),r.isP2SqOccupied(l,p+1)&&(d[p].setAttribute("draggable","true"),i(d[p],l,p+1)),r.isP2SqOccupied(l,p+1)&&d[p].classList.add("occupied"),d[p].addEventListener("click",(()=>{if(!j&&d[p].classList.contains("occupied"))try{const e=r.P2ChangeOrientation(l,p+1),t=e[0],n=e[1],o=t.map((e=>{const t=J.indexOf(e[0]),r=e[1]-1;return $[t].querySelectorAll(".square")[r]})),s=n.map((e=>{const t=J.indexOf(e[0]),r=e[1]-1;return $[t].querySelectorAll(".square")[r]}));o.forEach((e=>{e.ondragstart=null,e.setAttribute("draggable","false"),e.classList.remove("occupied","available")})),s.forEach(((e,t)=>{const r=n[t];e.classList.add("occupied"),e.setAttribute("draggable","true"),i(e,r[0],r[1])}))}catch{}})),h[p].addEventListener("click",(()=>{if(r.whoseTurn===r.playerOne&&null===r.winner)try{const n=r.makeTurn(l,p+1);null===n?(d[p].classList.add("missed"),h[p].classList.add("missed")):"object"==typeof n&&(d[p].classList.add("hit"),h[p].classList.add("hit"),n.isSunk)&&r[`P2${n.type.replace(/^./,n.type.at(0).toUpperCase())}Coords`].forEach((e=>{$[J.indexOf(e[0])].children[e[1]].classList.add("sunk"),z[J.indexOf(e[0])].children[e[1]].classList.add("sunk")})),null!==r.winner&&(x.textContent=`${e} wins!`),r.whoseTurn!==r.playerOne&&(D.style.display="none",null===r.winner&&(q.show(),P.textContent=t,T.style.display="none",L.style.display="flex"),F.style.display="flex")}catch(e){}}))}}(t,r),M.show()}))})();
//# sourceMappingURL=app.bundle.js.map